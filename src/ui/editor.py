# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'editor.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_editorWindow(object):
    def setupUi(self, editorWindow):
        editorWindow.setObjectName("editorWindow")
        editorWindow.setWindowModality(QtCore.Qt.ApplicationModal)
        editorWindow.resize(537, 337)
        self.centralwidget = QtWidgets.QWidget(editorWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.btn_newEntry = QtWidgets.QPushButton(self.centralwidget)
        self.btn_newEntry.setObjectName("btn_newEntry")
        self.horizontalLayout.addWidget(self.btn_newEntry)
        self.btn_deleteEntry = QtWidgets.QPushButton(self.centralwidget)
        self.btn_deleteEntry.setObjectName("btn_deleteEntry")
        self.horizontalLayout.addWidget(self.btn_deleteEntry)
        self.btn_save = QtWidgets.QPushButton(self.centralwidget)
        self.btn_save.setObjectName("btn_save")
        self.horizontalLayout.addWidget(self.btn_save)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.tblEdit = QtWidgets.QTableWidget(self.centralwidget)
        self.tblEdit.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tblEdit.setObjectName("tblEdit")
        self.tblEdit.setColumnCount(0)
        self.tblEdit.setRowCount(0)
        self.verticalLayout.addWidget(self.tblEdit)
        editorWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(editorWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 537, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setEnabled(True)
        self.menuFile.setObjectName("menuFile")
        editorWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(editorWindow)
        self.statusbar.setObjectName("statusbar")
        editorWindow.setStatusBar(self.statusbar)
        self.act_save = QtWidgets.QAction(editorWindow)
        self.act_save.setObjectName("act_save")
        self.actionSave_as_Backup = QtWidgets.QAction(editorWindow)
        self.actionSave_as_Backup.setObjectName("actionSave_as_Backup")
        self.actionRestore_Default = QtWidgets.QAction(editorWindow)
        self.actionRestore_Default.setEnabled(False)
        self.actionRestore_Default.setObjectName("actionRestore_Default")
        self.act_close = QtWidgets.QAction(editorWindow)
        self.act_close.setObjectName("act_close")
        self.actionOpen = QtWidgets.QAction(editorWindow)
        self.actionOpen.setEnabled(False)
        self.actionOpen.setObjectName("actionOpen")
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.act_save)
        self.menuFile.addAction(self.actionRestore_Default)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.act_close)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(editorWindow)
        QtCore.QMetaObject.connectSlotsByName(editorWindow)

    def retranslateUi(self, editorWindow):
        _translate = QtCore.QCoreApplication.translate
        editorWindow.setWindowTitle(_translate("editorWindow", "Keyword Editor"))
        self.btn_newEntry.setText(_translate("editorWindow", "New Entry"))
        self.btn_deleteEntry.setText(_translate("editorWindow", "Delete Entry"))
        self.btn_save.setText(_translate("editorWindow", "Save Default and Close"))
        self.menuFile.setTitle(_translate("editorWindow", "File"))
        self.act_save.setText(_translate("editorWindow", "Save default"))
        self.actionSave_as_Backup.setText(_translate("editorWindow", "Save as (Backup)"))
        self.actionRestore_Default.setText(_translate("editorWindow", "Restore Default"))
        self.act_close.setText(_translate("editorWindow", "Close"))
        self.actionOpen.setText(_translate("editorWindow", "Open"))
